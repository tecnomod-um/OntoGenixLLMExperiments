Here is the RML mapping:

@prefix customer_ontology: <https://customer_ontology.com#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix owl: <http://www.w3.org/2002/07/owl#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix rml: <http://semweb.mmlab.be/ns/rml#>.
@prefix ql: <http://semweb.mmlab.be/ns/ql#>.
@prefix ex: <https://example.com#>.

<#TriplesMapCustomer> a rr:TriplesMap;
    rml:logicalSource [
        rml:source "csv_data";
        rml:referenceFormulation ql:CSV
    ];
    rr:subjectMap [
        rr:template "https://customer_ontology.com/Customer/{{customer_unique_id}}{{FAIR_URI}}";
    ];
    rr:predicateObjectMap [
        rr:predicate customer_ontology:hasCity;
        rr:objectMap [
            rr:template "https://customer_ontology.com/City/{{customer_city}}{{FAIR_URI}}";
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate customer_ontology:hasState;
        rr:objectMap [
            rr:template "https://customer_ontology.com/State/{{customer_state}}{{FAIR_URI}}";
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate customer_ontology:hasUniqueId;
        rr:objectMap [
            rr:template "https://customer_ontology.com/UniqueId/{{customer_unique_id}}{{FAIR_URI}}";
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate customer_ontology:hasZipCodePrefix;
        rr:objectMap [
            rr:template "https://customer_ontology.com/ZipCodePrefix/{{customer_zip_code_prefix}}{{FAIR_URI}}";
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate customer_ontology:city;
        rr:objectMap [
            rr:column "customer_city";
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate customer_ontology:id;
        rr:objectMap [
            rr:column "customer_id";
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate customer_ontology:state;
        rr:objectMap [
            rr:column "customer_state";
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate customer_ontology:uniqueId;
        rr:objectMap [
            rr:column "customer_unique_id";
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate customer_ontology:zipCodePrefix;
        rr:objectMap [
            rr:column "customer_zip_code_prefix";
        ];
    ].

<#TriplesMapCity> a rr:TriplesMap;
    rml:logicalSource [
        rml:source "csv_data";
        rml:referenceFormulation ql:CSV
    ];
    rr:subjectMap [
        rr:template "https://customer_ontology.com/City/{{customer_city}}{{FAIR_URI}}";
    ];
    rr:predicateObjectMap [
        rr:predicate rdf:type;
        rr:objectMap [
            rr:constant customer_ontology:City;
        ];
    ].

<#TriplesMapState> a rr:TriplesMap;
    rml:logicalSource [
        rml:source "csv_data";
        rml:referenceFormulation ql:CSV
    ];
    rr:subjectMap [
        rr:template "https://customer_ontology.com/State/{{customer_state}}{{FAIR_URI}}";
    ];
    rr:predicateObjectMap [
        rr:predicate rdf:type;
        rr:objectMap [
            rr:constant customer_ontology:State;
        ];
    ].

<#TriplesMapUniqueId> a rr:TriplesMap;
    rml:logicalSource [
        rml:source "csv_data";
        rml:referenceFormulation ql:CSV
    ];
    rr:subjectMap [
        rr:template "https://customer_ontology.com/UniqueId/{{customer_unique_id}}{{FAIR_URI}}";
    ];
    rr:predicateObjectMap [
        rr:predicate rdf:type;
        rr:objectMap [
            rr:constant customer_ontology:UniqueId;
        ];
    ].

<#TriplesMapZipCodePrefix> a rr:TriplesMap;
    rml:logicalSource [
        rml:source "csv_data";
        rml:referenceFormulation ql:CSV
    ];
    rr:subjectMap [
        rr:template "https://customer_ontology.com/ZipCodePrefix/{{customer_zip_code_prefix}}{{FAIR_URI}}";
    ];
    rr:predicateObjectMap [
        rr:predicate rdf:type;
        rr:objectMap [
            rr:constant customer_ontology:ZipCodePrefix;
        ];
    ].
<pre>
@prefix rr: <http://www.w3.org/ns/r2rml#> .
@prefix rml: <http://semweb.mmlab.be/ns/rml#> .
@prefix void: <http://rdfs.org/ns/void#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix base: <https://base_ontology.com#> .
@prefix ql: <http://semweb.mmlab.be/ns/ql#> .

<#TriplesMap> a rr:TriplesMap ;
   rml:logicalSource [
       rml:source "your_csv_data.csv" ;
       ql:csvDelimiter "," ;
       ql:csvQuote '"' ;
       ql:csvLangMatches "^[a-zA-Z]+$" ;
       ql:csvEscapeHandling REPLACE ;
       ql:csvEscape "\\" ;
       ql:csvLineStartNumber 2 ;
   ] ;
   rr:subjectMap [
       rr:template "https://base_ontology.com/Product/{{ProductId}}_{FAIR_URI}" ;
       rr:class base:Product
   ] ;
   rr:predicateObjectMap [
       rr:predicate base:HasProductId ;
       rr:objectMap [
           rr:column "ProductId"
       ]
   ] ;
   rr:predicateObjectMap [
       rr:predicate base:HasUserId ;
       rr:objectMap [
           rr:column "UserId"
       ]
   ] .

<#TriplesMapRating> a rr:TriplesMap ;
   rml:logicalSource [
       rml:source "your_csv_data.csv" ;
       ql:csvDelimiter "," ;
       ql:csvQuote '"' ;
       ql:csvLangMatches "^[a-zA-Z]+$" ;
       ql:csvEscapeHandling REPLACE ;
       ql:csvEscape "\\" ;
       ql:csvLineStartNumber 2 ;
   ] ;
   rr:subjectMap [
       rr:template "https://base_ontology.com/Rating/{{ProductId}}_{{UserId}}_{FAIR_URI}" ;
       rr:class base:Rating
   ] ;
   rr:predicateObjectMap [
       rr:predicate base:RatedProduct ;
       rr:objectMap [
           rr:column "ProductId"
       ]
   ] ;
   rr:predicateObjectMap [
       rr:predicate base:RatedByUser ;
       rr:objectMap [
           rr:column "UserId"
       ]
   ] ;
   rr:predicateObjectMap [
       rr:predicate base:HasRating ;
       rr:objectMap [
           rr:column "Rating"
       ]
   ] ;
   rr:predicateObjectMap [
       rr:predicate base:HasTimestamp ;
       rr:objectMap [
           rr:column "Timestamp"
       ]
   ] .

<#TriplesMapUser> a rr:TriplesMap ;
   rml:logicalSource [
       rml:source "your_csv_data.csv" ;
       ql:csvDelimiter "," ;
       ql:csvQuote '"' ;
       ql:csvLangMatches "^[a-zA-Z]+$" ;
       ql:csvEscapeHandling REPLACE ;
       ql:csvEscape "\\" ;
       ql:csvLineStartNumber 2 ;
   ] ;
   rr:subjectMap [
       rr:template "https://base_ontology.com/User/{{UserId}}_{FAIR_URI}" ;
       rr:class base:User
   ] ;
   rr:predicateObjectMap [
       rr:predicate base:HasUserId ;
       rr:objectMap [
           rr:column "UserId"
       ]
   ] .
</pre>
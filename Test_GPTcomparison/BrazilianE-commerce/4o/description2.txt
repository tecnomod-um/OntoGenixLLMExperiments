**Foundational Prefix:**
https://base_ontology.com#
http://www.w3.org/1999/02/22-rdf-syntax-ns#
http://www.w3.org/2000/01/rdf-schema#
http://www.w3.org/2002/07/owl#

**Data Description:**
1. customer_city: text - city of the customer - N/A
2. customer_id: text - unique identifier for the customer - N/A
3. customer_state: text - state of the customer - N/A
4. customer_unique_id: text - unique identifier for the customer - N/A
5. customer_zip_code_prefix: Numerical - zip code prefix of the customer - 1004.0 to 99980.0

**classes:**
1. Customer

**subclasses:**
1. CustomerCity: subclass of -> Customer
2. CustomerState: subclass of -> Customer
3. CustomerUniqueId: subclass of -> Customer
4. CustomerZipCodePrefix: subclass of -> Customer

**Object Properties:**
1. hasCity: Customer - CustomerCity
2. hasState: Customer - CustomerState
3. hasUniqueId: Customer - CustomerUniqueId
4. hasZipCodePrefix: Customer - CustomerZipCodePrefix

**Data Type Properties:**
1. cityName: CustomerCity - text
2. stateName: CustomerState - text
3. uniqueId: CustomerUniqueId - text
4. zipCodePrefix: CustomerZipCodePrefix - Numerical

**Ontology Prefixes:**
@prefix base: <https://base_ontology.com#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix schema: <http://schema.org/> .
@prefix dcterms: <http://purl.org/dc/terms/> .

**Link of each entity to external resources:**
Customer: schema:Person
CustomerCity: schema:City
CustomerState: schema:State
CustomerUniqueId: dcterms:identifier
CustomerZipCodePrefix: schema:PostalCode

**Data Description:**
1. customer_city: text - city of the customer - N/A
2. customer_id: text - unique identifier for the customer - N/A
3. customer_state: text - state of the customer - N/A
4. customer_unique_id: text - unique identifier for the customer - N/A
5. customer_zip_code_prefix: Numerical - zip code prefix of the customer - 1004.0 to 99980.0

**classes:**
1. Customer

**subclasses:**
1. CustomerCity: subclass of -> Customer
2. CustomerState: subclass of -> Customer
3. CustomerUniqueId: subclass of -> Customer
4. CustomerZipCodePrefix: subclass of -> Customer

**Object Properties:**
1. hasCity: Customer - CustomerCity
2. hasState: Customer - CustomerState
3. hasUniqueId: Customer - CustomerUniqueId
4. hasZipCodePrefix: Customer - CustomerZipCodePrefix

**Data Type Properties:**
1. cityName: CustomerCity - text
2. stateName: CustomerState - text
3. uniqueId: CustomerUniqueId - text
4. zipCodePrefix: CustomerZipCodePrefix - Numerical
**Foundational Prefix:**
https://base_ontology.com#
http://www.w3.org/1999/02/22-rdf-syntax-ns#
http://www.w3.org/2000/01/rdf-schema#
http://www.w3.org/2002/07/owl#

**Data Description:**
1. Country: text - The country where the transaction occurred - [16 unique values]
2. Description: text - Textual description of the item - [2360 unique values]
3. InvoiceDate: text - The date when the invoice was issued - [806 unique dates]
4. InvoiceNo: text - Unique identifier for each invoice - [937 unique identifiers]
5. StockCode: text - Unique stock code for each item - [2408 unique codes]
6. CustomerID: Numerical - Unique identifier for each customer - [min: 12347, max: 18269, mean: 15587.2794635499, std: 1775.1752663906]
7. Quantity: Numerical - The quantity of each item per transaction - [min: -9360, max: 2880, mean: 7.7657882894, std: 78.1636373452]
8. UnitPrice: Numerical - The price per unit of the item - [min: 0.0, max: 13541.33, mean: 7.6455087754, std: 201.9077270209]

**classes:**
1. Transaction
2. Product
3. Customer
4. Invoice

**subclasses:**
1. InvoiceDate: subclass of -> Invoice
2. InvoiceNo: subclass of -> Invoice
3. StockCode: subclass of -> Product
4. Description: subclass of -> Product
5. Country: subclass of -> Transaction
6. Quantity: subclass of -> Transaction
7. UnitPrice: subclass of -> Product
8. CustomerID: subclass of -> Customer

**Object Properties:**
1. hasProduct: domain - Transaction, range - Product
2. hasCustomer: domain - Transaction, range - Customer
3. hasInvoice: domain - Transaction, range - Invoice

**Data Type Properties:**
1. countryName: domain - Country, range - xsd:string
2. descriptionText: domain - Description, range - xsd:string
3. invoiceDateValue: domain - InvoiceDate, range - xsd:string
4. invoiceNumber: domain - InvoiceNo, range - xsd:string
5. stockCodeValue: domain - StockCode, range - xsd:string
6. customerIdentifier: domain - CustomerID, range - xsd:integer
7. quantityValue: domain - Quantity, range - xsd:integer
8. unitPriceValue: domain - UnitPrice, range - xsd:decimal

To update the schema description for enhanced interoperability, we will link the entities to well-known external vocabularies and ontologies. This will facilitate data exchange and integration with other systems.

**Ontology Prefixes:**
The following prefixes are defined in Turtle format to include commonly used ontologies that will help in linking to external resources:

```
@prefix base: <https://base_ontology.com#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix dbo: <http://dbpedia.org/ontology/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix schema: <http://schema.org/> .
@prefix gr: <http://purl.org/goodrelations/v1#> .
```

**Link of each entity to external resources:**
For each entity, we will enumerate its corresponding external resource:

1. Transaction: schema:Order
2. Product: schema:Product
3. Customer: foaf:Person
4. Invoice: schema:Invoice
5. Country: dbo:Country
6. Description: schema:description
7. InvoiceDate: dcterms:date
8. InvoiceNo: schema:identifier
9. StockCode: schema:sku
10. CustomerID: schema:customerNumber
11. Quantity: schema:quantitativeValue
12. UnitPrice: gr:hasPriceSpecification

By linking to these external resources, we ensure that our ontology can interoperate with other systems that use these well-established vocabularies. This will make the data more accessible and understandable across different domains and applications.